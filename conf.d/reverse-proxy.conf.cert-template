error_log /var/log/nginx/error.log $NGINX_ERROR_LOG_LEVEL;
map_hash_bucket_size 256;
limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=10r/s;
limit_req_status 429;

# Map the CLIENTS DN to the access level based on the request method
map $ssl_client_s_dn $access_granted {
    default 0;
{{NGINX_AUTHORIZED_CLIENTS_DN_MAP}}
}

server {
    listen ${NGINX_PORT} ssl;
    listen [::]:${NGINX_PORT} ssl;

    server_tokens off;
    server_name $NGINX_HOSTNAME;

    ssl_certificate /certs/$NGINX_CERT;
    ssl_certificate_key /certs/$NGINX_CERT_PRIVATE;

    # Path to your CA certificate to verify client certificates
    ssl_client_certificate /certs/$NGINX_AUTH_CA_CERT;
    ssl_verify_client on;  # Enable client certificate verification
    ssl_verify_depth $NGINX_AUTH_CA_DEPTH;

    # Configure SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 5m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self';" always;

    client_max_body_size 1m;
    client_body_timeout 10s;
    client_header_timeout 10s;
    keepalive_timeout 10s;
    send_timeout 10s;

    location / {
        limit_req zone=auth_limit burst=20 nodelay;

        # Deny access if the password does not match the allowed access level
        if ($access_granted = 0) {
            return 401 "Unauthorized";
        }

        # Proxy pass the request to the backend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://127.0.0.1:${BW_API_PORT};
    }
}
